unik_Year$`All Year` <- 99
data_id <- tabelrp_cobs %>%
mutate(ID = paste(Site,Year))%>%
select(-Jarak)
dataraw_id_am <- raw_tabelam %>%
mutate(ID = paste(Site, Year))
as.data.frame(dataraw_id_am)
#Wramgling dan set data untuk shiny
Setvarkor <- dataraw_id_am %>% dplyr::count(Year, Site, Kategori.temuan)
Varkor2am <- dcast( data = Setvarkor, formula = Site+Year ~ Kategori.temuan ,  value.var = 'n',  fun.aggregate = sum )  # get sum of V3 by grouping V1 and V2
c1 = Var_korelasi2%>%
select(-Year,-Site, -total.kegiatan)%>%
names()
c2 = Var_korelasi2 %>%
names()
c3 = Var_korelasi2%>%
select( Year, Site, total.kegiatan)%>%
names()
c5 <- row.names.data.frame(dataraw_id_am$Kategori.temuan)
c6 <- Var_korelasi1%>%select(-Year)
Kategori.temuan.Name = raw_tabelam%>%
select(Kategori.temuan)%>%
names()
kate <- unique(raw_tabelam$Kategori.temuan)
kates <- as.data.frame(kate)
kt_maps <- raw_tabelam %>%
select(Year, Month, Site, Kategori.temuan,X, Y, Jumlah.temuan)
kt_mapsname <- raw_tabelam %>%
select(Year, Month, Site, Kategori.temuan,X, Y, Jumlah.temuan)%>%
names()
#persiapan - Selectinput ID
Transnam <- unique(tabelrp_cobs_type$Patrol.Transport.Type)
Sitename <- unique(tabelrp_cobs_type$Site)
my_df <- Var_korelasi2 %>%
select(-Site)
#Visualisasi data Map-----------------
#install.packages("rgdal", repos = "https://packagemanager.posit.co/cran/2023-06-01")
#install.packages("rJava",repos="http://cran.r-project.org")
#remotes::install_github('r-tmap/tmap')
# Instalasi dan memuat paket yang dibutuhkan
#install.packages("rgdal", repos = "https://packagemanager.posit.co/cran/2023-06-01")
library(shiny)
library(shinydashboard)
library(shinycssloaders)
library(plotly)
library(DT)
library(ggplot2)
library(maps)
library(maptools)
library(ggcorrplot)
library(ggtext)
library(leaflet)
library(highcharter)
library(data.table)
library(tidyverse)
library(reshape2)
ui <- dashboardPage(
#Dashboard Title -----------
dashboardHeader(title = "Ancaman Kawasan (SMART) FF IP Kalimantan Barat"),
#Dashboard Header-----
dashboardSidebar(
sidebarMenu(id = "sidebar",
#First menu item
menuItem(text = "Dataset", tabName = "Dataset", icon = icon("database")),
menuItem(text = "Visualisasi", tabName = "Vis", icon = icon("chart-line")),
# Conditional Panel for conditional widget appearance
# Filter should appear only for the visualization menu and selected tabs within it
conditionalPanel("input.sidebar =='Vis' && input.t2 =='distro'",selectInput(inputId = "var1", label = "Kategori Temuan", choices = c1, selected = "Pembalakan")),
conditionalPanel("input.sidebar =='Vis' && input.t2 =='trends'",selectInput(inputId = "var2", label = "Kategori Temuan", choices = c2, selected = "Kebakaran Hutan dan Lahan")),
menuItem(text = "Map", tabName = "Map", icon = icon("map"))
)
),
#Dashboard Body---------
dashboardBody(
tabItems(
tabItem(tabName = "Dataset",
#tabBox 1
tabBox(id="t1", width=12,
tabPanel("Profil Area Kerja", icon = icon("address-card"),
fluidRow(
column(width = 8, tags$img(src="Kalbar Area Project.jpg", width =550, height = 650, align= "center"),
tags$br() ,
tags$a("Profil Area Kerja FF IP Kalimantan Barat"), align = "center"),
column(width = 4, tags$br() ,
tags$p("Data ini merupakan kumpulan data patroli Ancaman Kawasan pada Area Kerja FF IP Kalimantan Barat
Lanskap Kalimantan Barat terdiri dari 3 lanskap yaitu
1. Lanskap Pegunungan Schwaner
2. Lanskap Hutan Lahan Basah
3. Lanskap Kaleutan")
)
)
),
tabPanel("Ringkasan Patroli",
fluidRow(
column(width=12,
div(
h5(DT::DTOutput("dataRingkasan"),icon=icon("table"))
)
),
column(width=11, height=5,
div(
h5(tabPanelBody("PanelRP", "Total Kegiatan Patroli Perkawasan per Tahun" , plotOutput("plotpanelR1"))))
)
)
),
tabPanel("Tipe Transportasi dan Jarak", DT::DTOutput("Transportasi"), icon = icon("table"),
selectInput(inputId = "Transite", label = "Site", choices = sort(unique(tabelrp_cobs_type$Site)), selected = "Hutan Desa Tanjung Beulang"),
sliderInput("Tranyears", "Tahun", min = min(pvt$Year), max = max(pvt$Year), value = c(2022)),
tabPanelBody("PanelTp", "Tipe Transportasi dan jarak per kawasan di setiap tahunnya", plotOutput("plotpanelT1"))),
tabPanel(title ="Aktivitas Manusia", DT::DTOutput("dataAncaman") ,icon=icon("table")),
)
),
tabItem("Vis",
tabBox(id ="t2", width=12,
tabPanel("Ancaman", value = "trends",
fluidRow(column(width = 12,
div(
tags$div(align="center", box(tableOutput("top5"), title = textOutput("head1"), collapsible = TRUE, status = "primary", collapsed=TRUE, solidHeader = TRUE)),
tags$div(align="center", box(tableOutput("low5"), title = textOutput("head2"), collapsible = TRUE, status = "primary", collapsed=TRUE, solidHeader = TRUE)))
),
column(12,
div(
withSpinner(plotlyOutput("bar"))
))
)
),
tabPanel("Distribution", value="distro",
# selectInput("var", "Select the variable", choices=c("Rape", "Assault")),
withSpinner(plotlyOutput("histplot", height = "350px"))),
tabPanel("Korelasi", id="corr", plotlyOutput("cor")),
tabPanel("Hubungan Kategori Temuan",
radioButtons(inputId ="fit" , label = "Select smooth method" , choices = c("loess", "lm"), selected = "lm" , inline = TRUE),
withSpinner(plotlyOutput("scatter")), value="relation",
conditionalPanel("input.sidebar == 'Vis' && input.t2 == 'relation'", selectInput(inputId = "var3", label = "variabel x", choices = c2, selected = "Penggunaan Kawasan")),
conditionalPanel("input.sidebar == 'Vis' && input.t2 == 'relation'", selectInput(inputId = "var4",label = "variabel y", choices = c2, selected = "Jarak", selectize = FALSE))
)
)
),
tabItem(
tabName = "Map",
box(selectInput(inputId = "Map",label = "Map Site", choices = c2, selected= "Pembalakan", multiple = TRUE,width = 250),
withSpinner(plotOutput("map_plot")), width = 12
)
)
)
)
)
load("D:/OneDrive - Fauna & Flora/3. West Kalimantan Analysis/D1-Patrols SMART/data/datatoshiny.RData")
load("D:/OneDrive - Fauna & Flora/3. West Kalimantan Analysis/D1-Patrols SMART/data/datatoshiny_v2.RData")
library(dplyr)
library(reshape2)
library(data.table)
# Menghitung dan mengubah data matrix-------------
library(r2d3)
library(nycflights13)
rplist <- list(raw_tabelrp)
unik_site <- unique(raw_tabelrp$Site)
unik_site$`All Site` <- 99
unik_Year <- unique(raw_tabelrp$Patrol.Year)
unik_Year$`All Year` <- 99
data_id <- tabelrp_cobs %>%
mutate(ID = paste(Site,Year))%>%
select(-Jarak)
dataraw_id_am <- raw_tabelam %>%
mutate(ID = paste(Site, Year))
as.data.frame(dataraw_id_am)
#Wramgling dan set data untuk shiny
Setvarkor <- dataraw_id_am %>% dplyr::count(Year, Site, Kategori.temuan)
Varkor2am <- dcast( data = Setvarkor, formula = Site+Year ~ Kategori.temuan ,  value.var = 'n',  fun.aggregate = sum )  # get sum of V3 by grouping V1 and V2
c1 = Var_korelasi2%>%
select(-Year,-Site, -total.kegiatan)%>%
names()
c2 = Var_korelasi2 %>%
names()
c3 = Var_korelasi2%>%
select( Year, Site, total.kegiatan)%>%
names()
c5 <- row.names.data.frame(dataraw_id_am$Kategori.temuan)
c6 <- Var_korelasi1%>%select(-Year)
Kategori.temuan.Name = raw_tabelam%>%
select(Kategori.temuan)%>%
names()
kate <- unique(raw_tabelam$Kategori.temuan)
kates <- as.data.frame(kate)
kt_maps <- raw_tabelam %>%
select(Year, Month, Site, Kategori.temuan,X, Y, Jumlah.temuan)
kt_mapsname <- raw_tabelam %>%
select(Year, Month, Site, Kategori.temuan,X, Y, Jumlah.temuan)%>%
names()
#persiapan - Selectinput ID
Transnam <- unique(tabelrp_cobs_type$Patrol.Transport.Type)
Sitename <- unique(tabelrp_cobs_type$Site)
my_df <- Var_korelasi2 %>%
select(-Site)
dft1 <- reshape2::dcast( data = tabelrp_cobs_type, formula = Year + Site ~ Patrol.Transport.Type,  value.var = 'Jarak',  fun.aggregate = sum )  # get sum of V3 by grouping V1 and V2
dft12 <- dft1 %>% select(-Site)
dft13 <- dft1 %>% select(-Year)
pvt <- dft12 %>%pivot_longer(-Year, names_to = "variable", values_to = "values")
pvt2 <- dft13 %>%pivot_longer(-Site, names_to = "variable", values_to = "values")
#Visualisasi data Map-----------------
#install.packages("rgdal", repos = "https://packagemanager.posit.co/cran/2023-06-01")
#install.packages("rJava",repos="http://cran.r-project.org")
#remotes::install_github('r-tmap/tmap')
# Instalasi dan memuat paket yang dibutuhkan
#install.packages("rgdal", repos = "https://packagemanager.posit.co/cran/2023-06-01")
library(shiny)
library(shinydashboard)
library(shinycssloaders)
library(plotly)
library(DT)
library(ggplot2)
library(maps)
library(maptools)
library(ggcorrplot)
library(ggtext)
library(leaflet)
library(highcharter)
library(data.table)
library(tidyverse)
library(reshape2)
ui <- dashboardPage(
#Dashboard Title -----------
dashboardHeader(title = "Ancaman Kawasan (SMART) FF IP Kalimantan Barat"),
#Dashboard Header-----
dashboardSidebar(
sidebarMenu(id = "sidebar",
#First menu item
menuItem(text = "Dataset", tabName = "Dataset", icon = icon("database")),
menuItem(text = "Visualisasi", tabName = "Vis", icon = icon("chart-line")),
# Conditional Panel for conditional widget appearance
# Filter should appear only for the visualization menu and selected tabs within it
conditionalPanel("input.sidebar =='Vis' && input.t2 =='distro'",selectInput(inputId = "var1", label = "Kategori Temuan", choices = c1, selected = "Pembalakan")),
conditionalPanel("input.sidebar =='Vis' && input.t2 =='trends'",selectInput(inputId = "var2", label = "Kategori Temuan", choices = c2, selected = "Kebakaran Hutan dan Lahan")),
menuItem(text = "Map", tabName = "Map", icon = icon("map"))
)
),
#Dashboard Body---------
dashboardBody(
tabItems(
tabItem(tabName = "Dataset",
#tabBox 1
tabBox(id="t1", width=12,
tabPanel("Profil Area Kerja", icon = icon("address-card"),
fluidRow(
column(width = 8, tags$img(src="Kalbar Area Project.jpg", width =550, height = 650, align= "center"),
tags$br() ,
tags$a("Profil Area Kerja FF IP Kalimantan Barat"), align = "center"),
column(width = 4, tags$br() ,
tags$p("Data ini merupakan kumpulan data patroli Ancaman Kawasan pada Area Kerja FF IP Kalimantan Barat
Lanskap Kalimantan Barat terdiri dari 3 lanskap yaitu
1. Lanskap Pegunungan Schwaner
2. Lanskap Hutan Lahan Basah
3. Lanskap Kaleutan")
)
)
),
tabPanel("Ringkasan Patroli",
fluidRow(
column(width=12,
div(
h5(DT::DTOutput("dataRingkasan"),icon=icon("table"))
)
),
column(width=11, height=5,
div(
h5(tabPanelBody("PanelRP", "Total Kegiatan Patroli Perkawasan per Tahun" , plotOutput("plotpanelR1"))))
)
)
),
tabPanel("Tipe Transportasi dan Jarak", DT::DTOutput("Transportasi"), icon = icon("table"),
selectInput(inputId = "Transite", label = "Site", choices = sort(unique(tabelrp_cobs_type$Site)), selected = "Hutan Desa Tanjung Beulang"),
sliderInput("Tranyears", "Tahun", min = min(pvt$Year), max = max(pvt$Year), value = c(2022)),
tabPanelBody("PanelTp", "Tipe Transportasi dan jarak per kawasan di setiap tahunnya", plotOutput("plotpanelT1"))),
tabPanel(title ="Aktivitas Manusia", DT::DTOutput("dataAncaman") ,icon=icon("table")),
)
),
tabItem("Vis",
tabBox(id ="t2", width=12,
tabPanel("Ancaman", value = "trends",
fluidRow(column(width = 12,
div(
tags$div(align="center", box(tableOutput("top5"), title = textOutput("head1"), collapsible = TRUE, status = "primary", collapsed=TRUE, solidHeader = TRUE)),
tags$div(align="center", box(tableOutput("low5"), title = textOutput("head2"), collapsible = TRUE, status = "primary", collapsed=TRUE, solidHeader = TRUE)))
),
column(12,
div(
withSpinner(plotlyOutput("bar"))
))
)
),
tabPanel("Distribution", value="distro",
# selectInput("var", "Select the variable", choices=c("Rape", "Assault")),
withSpinner(plotlyOutput("histplot", height = "350px"))),
tabPanel("Korelasi", id="corr", plotlyOutput("cor")),
tabPanel("Hubungan Kategori Temuan",
radioButtons(inputId ="fit" , label = "Select smooth method" , choices = c("loess", "lm"), selected = "lm" , inline = TRUE),
withSpinner(plotlyOutput("scatter")), value="relation",
conditionalPanel("input.sidebar == 'Vis' && input.t2 == 'relation'", selectInput(inputId = "var3", label = "variabel x", choices = c2, selected = "Penggunaan Kawasan")),
conditionalPanel("input.sidebar == 'Vis' && input.t2 == 'relation'", selectInput(inputId = "var4",label = "variabel y", choices = c2, selected = "Jarak", selectize = FALSE))
)
)
),
tabItem(
tabName = "Map",
box(selectInput(inputId = "Map",label = "Map Site", choices = c2, selected= "Pembalakan", multiple = TRUE,width = 250),
withSpinner(plotOutput("map_plot")), width = 12
)
)
)
)
)
server <- function(input, output){
#Data tabel menu item 1 tab panel 2, 3 ---------
output$dataRingkasan <- renderDataTable(raw_tabelrp, filter = 'top',
options = list(pageLength = 8, autoWidth = TRUE),
fillContainer = getOption("DT.fillContainer", TRUE),
class = 'multiple'
)
output$dataAncaman  <- renderDataTable(raw_tabelam, filter = 'top',
options = list(pageLength = 8, autoWidth = TRUE),
fillContainer = getOption("DT.fillContainer", TRUE),
class = 'cell-border stripe',
selection = 'multiple'
)
dft1 <- dcast( data = tabelrp_cobs_type, formula = Year + Patrol.Transport.Type ~ Site,  value.var = 'Jarak',  fun.aggregate = sum )  # get sum of V3 by grouping V1 and V2
output$Transportasi <- renderDataTable(dft1, filter = 'top',
options = list(pageLength = 8, autoWidth = TRUE),
fillContainer = getOption("DT.fillContainer", TRUE),
class = 'display',
selection = 'multiple'
)
### Output tingkat tabpanel body >>
## panel body Ringkasan
output$plotpanelR1 <- renderPlot({
df1 <- dcast( data = tabelrp_site, formula = Patrol.Year ~ Site,  value.var = 'n',  fun.aggregate = sum )  # get sum of V3 by grouping V1 and V2
df1 <- melt( data = df1, id.vars = 'Patrol.Year')   # melt data
df1 <- df1 %>% dplyr::rename(Site = variable, Year=Patrol.Year)
ggplot(data = df1, aes( x = Year, y = value, fill = Site , group = Site) ) +    # print bar chart
geom_bar( stat = 'identity', position = 'dodge' ) +
geom_text(aes(label = value, y=value + 0.05), position = position_dodge(0.9), vjust=0)
})
output$plotpanelT1 <- renderPlot({
data_plot <- subset(pvt2, year == input$Tranyears)
ggplot(pvt2, aes(x= variable, y= values, fill= variable)) +
geom_col(position="dodge", width = 0.8)
})
# For histogram - distribution charts
output$histplot <- renderPlotly({
p1 = Var_korelasi2 %>%
plot_ly() %>%
add_histogram(x=~get(input$var1)) %>%
layout(xaxis = list(title = paste(input$var1)))
p2 = Var_korelasi2 %>%
plot_ly() %>%
add_boxplot(x=~get(input$var1)) %>%
layout(yaxis = list(showticklabels = F))
# stacking the plots on top of each other
subplot(p2, p1, nrows = 2, shareX = TRUE) %>%
hide_legend() %>%
layout(title = "Distribution chart - Histogram and Boxplot",
yaxis = list(title="Frekuensi"))
})
## Scatter Charts
output$scatter <- renderPlotly({
p = Var_korelasi2 %>%
ggplot(aes(x=get(input$var3), y=get(input$var4))) +
geom_point() +
geom_smooth(method=get(input$fit)) +
labs(title = paste("Korelasi b/w", input$var3 , "and" , input$var4),
x = input$var3,
y = input$var4) +
theme(  plot.title = element_textbox_simple(size=10,
halign=0.5))
# ggplotly : interaktif plot
ggplotly(p)
})
## Plot Korelasi
output$cor <- renderPlotly({
my_df <- Var_korelasi2 %>%
select(-total.kegiatan,-Jarak, -Site, -Year)
# Compute a correlation matrix
corr <- round(cor(my_df), 2)
# Compute a matrix of correlation p-values
p.mat <- cor_pmat(my_df)
corr.plot <- ggcorrplot(
corr,
method = c("circle"),
show.legend = TRUE,
hc.order = FALSE,
lab= TRUE,
outline.col = "white",
p.mat = p.mat
)
ggplotly(corr.plot)
})
#Menu Item 1 bar plot
output$bar <- renderPlotly({
ggplot(tabelam_site, aes(x = factor(Site), y = n, fill = as.character(input$var2))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Site", y = "Banyaknya Ancaman", fill = "Kategori Temuan") +
facet_wrap(~Year, ncol = 2) +
geom_text(aes(label = n, y= n + 0.05), position = position_dodge(0.1), vjust=0) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.text.y = element_text(face = "italic")) +
guides(fill = guide_legend(reverse = TRUE)) +
coord_flip()
})
#Server Menu Item 2 ---------
output$head1 <- renderText(
paste("Tertinggi Pada Temuan", input$var2)
)
output$head2 <- renderText(
paste("Terendah Pada Temuan", input$var2)
)
# Rendering table with 5 states with high arrests for specific crime type
output$top5 <- renderTable({
Var_korelasi2 %>% select(Year, Site, input$var2) %>%
arrange(desc(get(input$var2))) %>%
head(5)
})
# Rendering table with 5 states with low arrests for specific crime type
output$low5 <- renderTable({
Var_korelasi2 %>% select(Year, Site, input$var2) %>%
arrange(get(input$var2)) %>%
head(5)
})
#Rendering map MENU ITEM 3
data <- reactive({
data.frame(
name = kt_maps$Kategori.temuan,
full_name = dataraw_id_am$ID,
state = kt_maps$Site,
lat = kt_maps$Y,
lon = kt_maps$X,
)%>%
filter(state %in% input$Map)
})
output$Map <- renderHighchart({
hcmap("custom/world", showLegend = FALSE) |>
hc_add_series(
data=data(),
type = "mappoint",
name = name,
tooltip = list(
pointFormat = "{point.name}" - "{point.full_name}Location: ({point.lat,.4f}, {point.lon:,.4f})"
)
)
})
}
shinyApp(ui, server)
setwd("D:/OneDrive - Fauna & Flora/3. West Kalimantan Analysis/D1-Patrols SMART/1.Shinypatrol_wk")
load("datatoshiny.RData")
load("datatoshiny_v2.RData")
library(dplyr)
setwd("D:/OneDrive - Fauna & Flora/3. West Kalimantan Analysis/D1-Patrols SMART/1.Shinypatrol_wk")
load("datatoshiny.RData")
load("datatoshiny_v2.RData")
library(dplyr)
library(reshape2)
library(data.table)
# Menghitung dan mengubah data matrix-------------
library(r2d3)
library(nycflights13)
rplist <- list(raw_tabelrp)
unik_site <- unique(raw_tabelrp$Site)
unik_site$`All Site` <- 99
unik_Year <- unique(raw_tabelrp$Patrol.Year)
unik_Year$`All Year` <- 99
data_id <- tabelrp_cobs %>%
mutate(ID = paste(Site,Year))%>%
select(-Jarak)
dataraw_id_am <- raw_tabelam %>%
mutate(ID = paste(Site, Year))
as.data.frame(dataraw_id_am)
#Wramgling dan set data untuk shiny
Setvarkor <- dataraw_id_am %>% dplyr::count(Year, Site, Kategori.temuan)
Varkor2am <- dcast( data = Setvarkor, formula = Site+Year ~ Kategori.temuan ,  value.var = 'n',  fun.aggregate = sum )  # get sum of V3 by grouping V1 and V2
c1 = Var_korelasi2%>%
select(-Year,-Site, -total.kegiatan)%>%
names()
c2 = Var_korelasi2 %>%
names()
c3 = Var_korelasi2%>%
select( Year, Site, total.kegiatan)%>%
names()
c5 <- row.names.data.frame(dataraw_id_am$Kategori.temuan)
c6 <- Var_korelasi1%>%select(-Year)
Kategori.temuan.Name = raw_tabelam%>%
select(Kategori.temuan)%>%
names()
kate <- unique(raw_tabelam$Kategori.temuan)
kates <- as.data.frame(kate)
kt_maps <- raw_tabelam %>%
select(Year, Month, Site, Kategori.temuan,X, Y, Jumlah.temuan)
kt_mapsname <- raw_tabelam %>%
select(Year, Month, Site, Kategori.temuan,X, Y, Jumlah.temuan)%>%
names()
#persiapan - Selectinput ID
Transnam <- unique(tabelrp_cobs_type$Patrol.Transport.Type)
Sitename <- unique(tabelrp_cobs_type$Site)
my_df <- Var_korelasi2 %>%
select(-Site)
dft1 <- reshape2::dcast( data = tabelrp_cobs_type, formula = Year + Site ~ Patrol.Transport.Type,  value.var = 'Jarak',  fun.aggregate = sum )  # get sum of V3 by grouping V1 and V2
dft12 <- dft1 %>% select(-Site)
dft13 <- dft1 %>% select(-Year)
pvt <- dft12 %>%pivot_longer(-Year, names_to = "variable", values_to = "values")
pvt2 <- dft13 %>%pivot_longer(-Site, names_to = "variable", values_to = "values")
#Visualisasi data Map-----------------
#install.packages("rgdal", repos = "https://packagemanager.posit.co/cran/2023-06-01")
#install.packages("rJava",repos="http://cran.r-project.org")
#remotes::install_github('r-tmap/tmap')
# Instalasi dan memuat paket yang dibutuhkan
#install.packages("rgdal", repos = "https://packagemanager.posit.co/cran/2023-06-01")
